//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PROYECTOVENTAS
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class COMPUVENTASEntities : DbContext
    {
        public COMPUVENTASEntities()
            : base("name=COMPUVENTASEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<DETALLEPAGO> DETALLEPAGO { get; set; }
        public DbSet<DocPaga> DocPaga { get; set; }
        public DbSet<PAGO> PAGO { get; set; }
        public DbSet<pagoconsulta> pagoconsulta { get; set; }
        public DbSet<tb_categoria> tb_categoria { get; set; }
        public DbSet<tb_producto> tb_producto { get; set; }
        public DbSet<tb_rol> tb_rol { get; set; }
        public DbSet<tb_usuario> tb_usuario { get; set; }
        public DbSet<tb_venta> tb_venta { get; set; }
        public DbSet<tb_ventaxproducto> tb_ventaxproducto { get; set; }
    
        [EdmFunction("COMPUVENTASEntities", "PEDIDOXCLIENTEXTODOS")]
        public virtual IQueryable<PEDIDOXCLIENTEXTODOS_Result> PEDIDOXCLIENTEXTODOS(string prod, Nullable<System.DateTime> fecha, Nullable<System.DateTime> fecha2)
        {
            var prodParameter = prod != null ?
                new ObjectParameter("prod", prod) :
                new ObjectParameter("prod", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PEDIDOXCLIENTEXTODOS_Result>("[COMPUVENTASEntities].[PEDIDOXCLIENTEXTODOS](@prod, @fecha, @fecha2)", prodParameter, fechaParameter, fecha2Parameter);
        }
    
        [EdmFunction("COMPUVENTASEntities", "PEDIDOXCOMPROBANTE")]
        public virtual IQueryable<PEDIDOXCOMPROBANTE_Result> PEDIDOXCOMPROBANTE(string prod, Nullable<System.DateTime> fecha, Nullable<System.DateTime> fecha2)
        {
            var prodParameter = prod != null ?
                new ObjectParameter("prod", prod) :
                new ObjectParameter("prod", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PEDIDOXCOMPROBANTE_Result>("[COMPUVENTASEntities].[PEDIDOXCOMPROBANTE](@prod, @fecha, @fecha2)", prodParameter, fechaParameter, fecha2Parameter);
        }
    
        [EdmFunction("COMPUVENTASEntities", "PEDIDOXPRODUCTOXTODOS")]
        public virtual IQueryable<PEDIDOXPRODUCTOXTODOS_Result> PEDIDOXPRODUCTOXTODOS(string prod, Nullable<System.DateTime> fecha, Nullable<System.DateTime> fecha2)
        {
            var prodParameter = prod != null ?
                new ObjectParameter("prod", prod) :
                new ObjectParameter("prod", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PEDIDOXPRODUCTOXTODOS_Result>("[COMPUVENTASEntities].[PEDIDOXPRODUCTOXTODOS](@prod, @fecha, @fecha2)", prodParameter, fechaParameter, fecha2Parameter);
        }
    
        [EdmFunction("COMPUVENTASEntities", "PEDIDOXPRODUCTOXTODOS1")]
        public virtual IQueryable<PEDIDOXPRODUCTOXTODOS1_Result> PEDIDOXPRODUCTOXTODOS1(string prod, Nullable<System.DateTime> fecha, Nullable<System.DateTime> fecha2)
        {
            var prodParameter = prod != null ?
                new ObjectParameter("prod", prod) :
                new ObjectParameter("prod", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PEDIDOXPRODUCTOXTODOS1_Result>("[COMPUVENTASEntities].[PEDIDOXPRODUCTOXTODOS1](@prod, @fecha, @fecha2)", prodParameter, fechaParameter, fecha2Parameter);
        }
    
        [EdmFunction("COMPUVENTASEntities", "REPORPEDIDODOCUMENTO")]
        public virtual IQueryable<REPORPEDIDODOCUMENTO_Result> REPORPEDIDODOCUMENTO(string prod, Nullable<System.DateTime> fecha, Nullable<System.DateTime> fecha2)
        {
            var prodParameter = prod != null ?
                new ObjectParameter("prod", prod) :
                new ObjectParameter("prod", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<REPORPEDIDODOCUMENTO_Result>("[COMPUVENTASEntities].[REPORPEDIDODOCUMENTO](@prod, @fecha, @fecha2)", prodParameter, fechaParameter, fecha2Parameter);
        }
    
        [EdmFunction("COMPUVENTASEntities", "REPORTPAGO")]
        public virtual IQueryable<REPORTPAGO_Result> REPORTPAGO(string cliente)
        {
            var clienteParameter = cliente != null ?
                new ObjectParameter("cliente", cliente) :
                new ObjectParameter("cliente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<REPORTPAGO_Result>("[COMPUVENTASEntities].[REPORTPAGO](@cliente)", clienteParameter);
        }
    
        [EdmFunction("COMPUVENTASEntities", "TOPCLIENTES")]
        public virtual IQueryable<TOPCLIENTES_Result> TOPCLIENTES(Nullable<int> prod, Nullable<System.DateTime> fecha, Nullable<System.DateTime> fecha2)
        {
            var prodParameter = prod.HasValue ?
                new ObjectParameter("prod", prod) :
                new ObjectParameter("prod", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TOPCLIENTES_Result>("[COMPUVENTASEntities].[TOPCLIENTES](@prod, @fecha, @fecha2)", prodParameter, fechaParameter, fecha2Parameter);
        }
    
        [EdmFunction("COMPUVENTASEntities", "TOPPRODUCTOS")]
        public virtual IQueryable<TOPPRODUCTOS_Result> TOPPRODUCTOS(Nullable<int> prod, Nullable<System.DateTime> fecha, Nullable<System.DateTime> fecha2)
        {
            var prodParameter = prod.HasValue ?
                new ObjectParameter("prod", prod) :
                new ObjectParameter("prod", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TOPPRODUCTOS_Result>("[COMPUVENTASEntities].[TOPPRODUCTOS](@prod, @fecha, @fecha2)", prodParameter, fechaParameter, fecha2Parameter);
        }
    
        public virtual int ppago5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ppago5");
        }
    
        public virtual int registrarDetallePago(Nullable<int> idVenta, Nullable<int> idProducto, Nullable<int> cantidad, Nullable<decimal> precio)
        {
            var idVentaParameter = idVenta.HasValue ?
                new ObjectParameter("idVenta", idVenta) :
                new ObjectParameter("idVenta", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("registrarDetallePago", idVentaParameter, idProductoParameter, cantidadParameter, precioParameter);
        }
    
        public virtual int registrarDetalleVenta(Nullable<int> idVenta, Nullable<int> idProducto, Nullable<int> cantidad, Nullable<decimal> precio)
        {
            var idVentaParameter = idVenta.HasValue ?
                new ObjectParameter("idVenta", idVenta) :
                new ObjectParameter("idVenta", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("registrarDetalleVenta", idVentaParameter, idProductoParameter, cantidadParameter, precioParameter);
        }
    
        public virtual int registrarPago(Nullable<int> idUsuario, Nullable<bool> tipo, Nullable<bool> tipo2, string tarjeta, Nullable<System.DateTime> fechaven, string cvc, Nullable<int> doc)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(bool));
    
            var tipo2Parameter = tipo2.HasValue ?
                new ObjectParameter("tipo2", tipo2) :
                new ObjectParameter("tipo2", typeof(bool));
    
            var tarjetaParameter = tarjeta != null ?
                new ObjectParameter("tarjeta", tarjeta) :
                new ObjectParameter("tarjeta", typeof(string));
    
            var fechavenParameter = fechaven.HasValue ?
                new ObjectParameter("fechaven", fechaven) :
                new ObjectParameter("fechaven", typeof(System.DateTime));
    
            var cvcParameter = cvc != null ?
                new ObjectParameter("cvc", cvc) :
                new ObjectParameter("cvc", typeof(string));
    
            var docParameter = doc.HasValue ?
                new ObjectParameter("doc", doc) :
                new ObjectParameter("doc", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("registrarPago", idUsuarioParameter, tipoParameter, tipo2Parameter, tarjetaParameter, fechavenParameter, cvcParameter, docParameter);
        }
    
        public virtual int registrarUsuario(string correoUsuario, string claveUsuario, string nombresUsuario, string apePatUsuario, string apeMatUsuario, string dniUsuario, Nullable<System.DateTime> fecNacimientoUsuario, string telefonoUsuario, string celularUsuario, Nullable<int> idRol)
        {
            var correoUsuarioParameter = correoUsuario != null ?
                new ObjectParameter("correoUsuario", correoUsuario) :
                new ObjectParameter("correoUsuario", typeof(string));
    
            var claveUsuarioParameter = claveUsuario != null ?
                new ObjectParameter("claveUsuario", claveUsuario) :
                new ObjectParameter("claveUsuario", typeof(string));
    
            var nombresUsuarioParameter = nombresUsuario != null ?
                new ObjectParameter("nombresUsuario", nombresUsuario) :
                new ObjectParameter("nombresUsuario", typeof(string));
    
            var apePatUsuarioParameter = apePatUsuario != null ?
                new ObjectParameter("apePatUsuario", apePatUsuario) :
                new ObjectParameter("apePatUsuario", typeof(string));
    
            var apeMatUsuarioParameter = apeMatUsuario != null ?
                new ObjectParameter("apeMatUsuario", apeMatUsuario) :
                new ObjectParameter("apeMatUsuario", typeof(string));
    
            var dniUsuarioParameter = dniUsuario != null ?
                new ObjectParameter("dniUsuario", dniUsuario) :
                new ObjectParameter("dniUsuario", typeof(string));
    
            var fecNacimientoUsuarioParameter = fecNacimientoUsuario.HasValue ?
                new ObjectParameter("fecNacimientoUsuario", fecNacimientoUsuario) :
                new ObjectParameter("fecNacimientoUsuario", typeof(System.DateTime));
    
            var telefonoUsuarioParameter = telefonoUsuario != null ?
                new ObjectParameter("telefonoUsuario", telefonoUsuario) :
                new ObjectParameter("telefonoUsuario", typeof(string));
    
            var celularUsuarioParameter = celularUsuario != null ?
                new ObjectParameter("celularUsuario", celularUsuario) :
                new ObjectParameter("celularUsuario", typeof(string));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("idRol", idRol) :
                new ObjectParameter("idRol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("registrarUsuario", correoUsuarioParameter, claveUsuarioParameter, nombresUsuarioParameter, apePatUsuarioParameter, apeMatUsuarioParameter, dniUsuarioParameter, fecNacimientoUsuarioParameter, telefonoUsuarioParameter, celularUsuarioParameter, idRolParameter);
        }
    
        public virtual int registrarVenta(Nullable<int> idUsuario, Nullable<bool> estadoVenta)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var estadoVentaParameter = estadoVenta.HasValue ?
                new ObjectParameter("estadoVenta", estadoVenta) :
                new ObjectParameter("estadoVenta", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("registrarVenta", idUsuarioParameter, estadoVentaParameter);
        }
    }
}
